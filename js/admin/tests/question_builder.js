// Generated by CoffeeScript 1.4.0
var Answer, QuestionBuilder;

QuestionBuilder = (function() {

  QuestionBuilder.prototype.question = {
    type: ''
  };

  function QuestionBuilder(form) {
    this.form = form;
    this._detectElements();
    this._init();
    this._bindEvents();
  }

  QuestionBuilder.prototype._init = function() {
    this._detectType();
    return this.renderAnswers(this.question.type);
  };

  QuestionBuilder.prototype._detectType = function() {
    return this.question.type = this.getQuestionType();
  };

  QuestionBuilder.prototype._detectElements = function() {
    this.controls = {
      qestion_type: this.form.find('.qestion-type'),
      add_answer: this.form.find('.add-answer'),
      start_upload: this.form.find('.question-upload'),
      submit: this.form.find('input[type=submit]'),
      edit: this.form.find('#editquestion')
    };
    return this.elemets = {
      section_answers: this.form.find('.testanswers'),
      answers_container: this.form.find('.answers_container'),
      question_img_container: this.form.find('.question-img-container'),
      qestion_container: $('section.questions')
    };
  };

  QuestionBuilder.prototype._bindEvents = function() {
    var _this = this;
    this._initValidation();
    this._initUploader();
    this.controls.qestion_type.change(function() {
      _this.question.type = _this.getQuestionType();
      switch (_this.question.type) {
        case 'write':
          _this.removeAnswersContainer();
          break;
        case 'checkbox':
          _this.renderAnswers('checkbox');
          break;
        case 'radio':
          _this.renderAnswers('radio');
      }
      return false;
    });
    this.controls.add_answer.unbind("click");
    this.controls.add_answer.click(function(e) {
      var count, new_answer;
      count = $('.qopt').length;
      new_answer = Answer.factory();
      _this.elemets.answers_container.append(new_answer.el);
      new_answer.el.find('.qopt').attr('name', 'question[answers][' + count + '][text]');
      new_answer.bindAfter();
      return false;
    });
    this.controls.edit.unbind("click");
    this.controls.edit.click(function(e) {
      if (_this.form.valid()) {
        _this._editData();
      }
      return false;
    });
    this.controls.submit.unbind("click");
    return this.controls.submit.click(function(e) {
      if (_this.form.valid()) {
        _this._saveData();
      }
      return false;
    });
  };

  QuestionBuilder.prototype._editData = function() {
    var _this = this;
    return $.ajax({
      url: "" + SYS.baseUrl + "admin/tests/save_qestion",
      type: "POST",
      data: this.form.serialize(),
      dataType: 'json',
      success: function(res) {
        $('[data-id="' + _this.form.find('input[name="question[id]"]').val() + '"]').remove();
        _this.elemets.qestion_container.prepend(res.data.question);
        $('.modal-backdrop').hide();
        $('body').css({
          overflow: "auto"
        });
        $('.fixed').fadeOut();
        return Alert.factory().setMessage("Вопрос успешно изменен!").render();
      }
    });
  };

  QuestionBuilder.prototype._saveData = function(data) {
    var _this = this;
    return $.ajax({
      url: "" + SYS.baseUrl + "admin/tests/save_qestion",
      type: "POST",
      data: this.form.serialize(),
      dataType: 'json',
      success: function(res) {
        _this.elemets.qestion_container.prepend(res.data.question);
        Alert.factory().setMessage("Вопрос успешно добавлен!").render();
        _this.form.trigger('reset');
        _this.controls.qestion_type.trigger('change');
        $.each($(".testanswers").find('.row'), function(key, value) {
          if (key > 1) {
            return $(this).remove();
          }
        });
        return $(".success").removeClass('success');
      }
    });
  };

  QuestionBuilder.prototype._initUploader = function() {
    var _this = this;
    return new uploader({
      selector: this.controls.start_upload,
      addCallback: function(e, data) {},
      doneCallback: function(e, data) {
        _this.elemets.question_img_container.attr('src', SYS.baseUrl + data.result.data.paste);
        _this.form.find("input[name='question[image]']").val(data.result.data.name);
        return $('.delete-image').show();
      },
      progressCallback: function(progress) {}
    });
  };

  QuestionBuilder.prototype._initValidation = function() {
    var _this = this;
    this.form.validate({
      success: function(label) {
        return $(label).closest(".control-group").removeClass("error").addClass("success");
      },
      highlight: function(label) {
        return $(label).closest(".control-group").removeClass("success").addClass("error");
      }
    });
    return this.form.find('textarea.question').rules("add", {
      required: true
    });
  };

  QuestionBuilder.prototype.getQuestionType = function() {
    return this.controls.qestion_type.find('option:selected').val();
  };

  QuestionBuilder.prototype.getAnswersCount = function() {
    return this.elemets.answers_container.find('div.row').length;
  };

  QuestionBuilder.prototype.removeAnswersContainer = function() {
    this.controls.add_answer.hide();
    return this.elemets.answers_container.parent().hide();
  };

  QuestionBuilder.prototype.getCorrectAnswersElemets = function() {
    return this.elemets.answers_container.find('.correct-answers');
  };

  QuestionBuilder.prototype.renderAnswers = function(answersType) {
    var _this = this;
    this.controls.add_answer.show();
    this.elemets.answers_container.parent().show();
    return this.getCorrectAnswersElemets().each(function(key, el) {
      el.type = answersType;
      switch (answersType) {
        case 'checkbox':
          return $(el).attr('name', "question[answers][" + key + "][corrected]");
        case 'radio':
          return $(el).attr('name', "question[answers][radio][corrected]");
      }
    });
  };

  return QuestionBuilder;

})();

Answer = (function() {

  Answer.prototype.count = 0;

  Answer.prototype.template = JST['answer'];

  function Answer(el) {
    this.el = el;
    if (!this.el) {
      this.render();
    }
    Answer.prototype.count++;
    this._detectElemets();
    this._bindElemets();
  }

  Answer.prototype.render = function() {
    return this.el = $(this.template({
      key: Answer.prototype.count,
      type: question.question.type
    }));
  };

  Answer.prototype._detectElemets = function() {
    this.controls = {
      remove: this.el.find('span.remove-answer')
    };
    return this.fields = {
      answer: this.el.find('textarea.qopt')
    };
  };

  Answer.prototype._bindElemets = function() {
    var _this = this;
    return this.controls.remove.click(function(e) {
      var alert;
      if (question.getAnswersCount() > 2) {
        _this.el.remove();
      } else {
        if ($('#question-edit').find('input[name="question[id]"]').length !== 0) {
          (new Alert).setLayout('#questionModal').setStatus('error').setMessage("Не меньше двух вариатов ответов!").render();
          alert = $('.alert');
          $('.alert').remove();
          $('.modal-body').before(alert);
        } else {
          (new Alert).setStatus('error').setMessage("Не меньше двух вариатов ответов!").render();
        }
      }
      return false;
    });
  };

  Answer.prototype.bindAfter = function() {
    return this.fields.answer.rules("add", {
      required: true
    });
  };

  Answer.factory = function() {
    return new Answer();
  };

  return Answer;

})();
